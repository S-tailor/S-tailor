<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>jam</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-449.v6960d7c54c69">
      <queuingDurationMillis>39</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>11</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
  </actions>
  <queueId>1</queueId>
  <timestamp>1713798476179</timestamp>
  <startTime>1713798476200</startTime>
  <result>SUCCESS</result>
  <duration>2203</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
	agent none
	options { skipDefaultCheckout(false) }
	stages {
		stage(&apos;git pull&apos;) {
			agent any
			steps {
			    git credentialsId: &apos;jamsince1994&apos;, url: &apos;https://lab.ssafy.com/s10-final/S10P31B107.git&apos;
			}
		}
		stage(&apos;Docker build&apos;) {
			agent any
			steps {
				script {
                    				try {
						sh &apos;cd /home&apos;
						sh &apos;docker-compose build&apos;
					}catch(e) {
                        				mattermostSend (
                                					color: &quot;danger&quot;, 
                                					message: &quot;Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                            				)
                    				} 
				}
			}
		}
		stage(&apos;Docker run&apos;) {
			agent any
			steps {
				script {
                    				try {
						sh &apos;cd /home&apos;
						sh &apos;docker-compose down&apos;
						sh &apos;docker-compose up -d&apos;
					}catch(e) {
						currentBuild.result = &quot;FAILURE&quot;
                    				} finally {
						if(currentBuild.result == &quot;FAILURE&quot;){
							mattermostSend (
                                						color: &quot;danger&quot;, 
                                						message: &quot;Build FAILED: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                            					)
						}
						else{
							mattermostSend (
                                						color: &quot;good&quot;, 
                                						message: &quot;Build SUCCESS: ${env.JOB_NAME} #${env.BUILD_NUMBER} (&lt;${env.BUILD_URL}|Link to build&gt;)&quot;
                            					)
						}
					}
				}
			}
		}
	}
}</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>40044388</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>1907384069</long>
      </entry>
      <entry>
        <string>run</string>
        <long>597987167</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>1187617820</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>211209762</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>3</iota>
    <head>1:3</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>